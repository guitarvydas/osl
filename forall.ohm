forall {
  Main = sharp+ "forall" ident "as" Predicate ident "=" "cond" CondClause+ CondElse

  Predicate = ident "(" actuals ")"
  CondClause = Guard value
  CondElse = "else" value

  Guard = Predicate
  value = line

  actuals =   "(" actuals ")" -- parenthesized
            | notPAREN+         -- raw

  line = ~sharp notNL* nl

  notPAREN = ~"(" ~")" any

    ident = firstChar restChar*
    firstChar = "A" .. "Z" | "a" .. "z" | "_"
    restChar = "0" .. "9" | firstChar
    nl = "\n"
    sharp = "#"
    notNL = ~nl any
}